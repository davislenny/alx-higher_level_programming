# run test with python3 -m doctest -v ./tests/2-matrix_divided.txt

This is the "matrix_divided" module
===================================

Using ''matrix_divided funtion''
--------------------------------

Import the function from the module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Test for a normal matrix vs positive div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test for a normal matrix vs div == 0:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Test for matrix with a non-integer:
	>>> matrix = [[1, "School", 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for a non-integer div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, "string"))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Test for matrix with varying row sizes:
	>>> matrix = [[1, 2, 3], [5, 6]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test for no argements:
	>>> print(matrix_divided())
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
